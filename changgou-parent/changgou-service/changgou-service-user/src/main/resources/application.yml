server:
  port: 8100
spring:
  application:
    name: user

  datasource:
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/changgou?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
    username: root

    druid:
      initial-size: 5  # 初始化大小
      min-idle: 5  # 最小
      max-active: 20  # 最大
      max-wait: 60000  # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000  # 指定一个空闲连接最少空闲多久后可被清除，单位是毫秒
      validationQuery: select 'x'
      test-while-idle: true  # 当连接空闲时，是否执行连接测试
      test-on-borrow: false  # 当从连接池借用连接时，是否测试该连接
      test-on-return: false  # 在连接归还到连接池时是否测试该连接
      filters: config,wall,stat  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      poolPreparedStatements: true # 打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 20
      maxOpenPreparedStatements: 20
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.slowSqlMillis=200;druid.stat.logSlowSql=true;config.decrypt=false
      # 合并多个DruidDataSource的监控数据
      #use-global-data-source-stat: true
      #WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        enabled: true #是否启用StatFilter默认值true
        url-pattern: /*
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/v2/api-docs
        session-stat-enable: true
        session-stat-max-count: 10
      #StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        enabled: true #是否启用StatViewServlet默认值true
        url-pattern: /druid/*
        reset-enable: true
        login-username: song
        login-password: song


  sleuth:
    sampler:
      probability: 1
  zipkin:
    base-url: http://127.0.0.1:9411/
    service:
      name: user
  redis:
    host: localhost
    timeout: 5000

  cache:
    type: caffeine
    caffeine:
      spec: initialCapacity=50,maximumSize=500,expireAfterWrite=15s


# 配置redis的缓存
#  cache:
#    redis:
#      key-prefix: "REDIS_USER_"
#      use-key-prefix: true
#      time-to-live: 15

eureka:
  client:
    service-url:
      defaultZone: http://song:song@127.0.0.1:7000/eureka
  instance:
    prefer-ip-address: true


feign:
  hystrix:
    enabled: false

  httpclient:
    enabled: true
    max-connections: 1000
    max-connections-per-route: 1000


mybatis:
  type-aliases-package: com.song.entity
  mapper-locations: classpath:/mapper/*.xml
  #开启二级缓存 基于namespace下的mapper
  configuration:
    cache-enabled: true

logging:
  level:
    root: info
#定向的包的日志级别
    com.song: debug

ribbon:
  ConnectTimeout: 1000
  MaxConnectionsPerHost: 1000
  MaxTotalConnections: 1000
  ReadTimeout: 8000
