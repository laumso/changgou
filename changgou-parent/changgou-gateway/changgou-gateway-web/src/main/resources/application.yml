spring:
  application:
    name: gateway
  profiles:
    active: zuul

  security:
    user:
      name: song
      password: song

eureka:
  client:
    service-url:
      defaultZone: http://song:song@localhost:7000/eureka
  instance:
    prefer-ip-address: true
#    ip-address: ${spring.cloud.client.ip-address}:${server.port}
server:
  port: 9000

---
spring:
  profiles: gateway1
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: '*'
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE

      routes:
            - id: goods
              uri: http://localhost:8000       #代表从注册中心获取服务，且以lb(load-balance)负载均衡方式转发
              predicates:                     #断言
              - Path=/goods/**            #表示将以/service01/**开头的请求转发到uri为lb://MICROSERVICE01的地址上
         #   - After=2019-06-20T00:00:00.789-07:00[America/Denver] #表示在该时间点之后的时间，发出的请求会被路由到uri
      #        filters:
      #        - StripPrefix=1                #表示将Path的路径/service01在转发前去掉，如果设置StripPrefix=2，表示将/service01/*去掉 以此类推... 同时将spring.cloud.gateway.discovery.locator.enabled改为false，如果不改的话，之前的localhost:8799/client01/test01这样的请求地址也能正常访问，因为这时为每个服务创建了2个router
# ========添加配置=======
management:
  endpoints:
    web:
      exposure:
        include: "*" #注意这里*要加引号，暴露全部，也可以只暴露相应endpoint
  endpoint:
    routes:
      enabled: true # 默认为true，可以省略
---
#zuul:
#  routes:
#    goods:
#      path: /goods/**
#      serviceId: goods
spring:
  profiles: zuul

  redis:
    timeout: 5000
    host: localhost
  datasource:
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/changgou?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
    username: root


zuul:
  routes:
    goods: /goods/**
    user: /user/**